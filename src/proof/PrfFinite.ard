\import Function.Meta
\import Logic
\import Paths
\import Set
\import Set.Fin
\import Set.Subset
\import decidable.DecLanguage
\import decidable.FormulaCode
\import proof.PrfWeaken
\import proof.Proof
\import syntax.Context
\import syntax.Substitution
\import syntax.Syntax
\import util.SetUtil

\func prfFinite {_ : DecLanguage} {c : Context} {axioms : Theory c} {toShow : Formula c}
                (prf : Prf axioms toShow) : \Sigma (axioms' : Theory c) (axioms' ⊆ axioms) (FinSet (Elements axioms')) (Prf axioms' toShow)
\elim prf
  | AXM e => (single toShow, SubsetHelper.subsetSingle e, FinSets.FinSingle, AXM idp)
  | contra f prf1 prf2 =>
    \let
      | h1 => prfFinite prf1
      | h2 => prfFinite prf2
    \in (
      h1.1 ∪ h2.1,
      SubsetHelper.subsetUnion h1.2 h2.2,
      FinSets.FinUnion h1.3 h2.3,
      contra f (prfWeaken h1.4 (\lam h => byLeft h)) (prfWeaken h2.4 (\lam h => byRight h))
    )
  | forAllElim f e t prf =>
    \let
      | h => prfFinite prf
      -- h.1 could have (subst f t) in it. Thats needs to be removed
    \in (
      add (delete h.1 (Substitution.subst f t)) (forAllH f),
      SubsetHelper.subsetUnion (SubsetHelper.subsetDelete h.2) (\lam p => transport axioms p e),
      FinSets.FinUnion (FinSets.FinWithout h.3 (decideEq _)) FinSets.FinSingle,
      forAllElim f (byRight idp) t (prfWeaken h.4 (\lam {f'} hf' => \case decideEq (Substitution.subst f t) f' \with {
        | yes d => byRight d
        | no d => byLeft (byLeft (hf', d))
      }))
    )
  | introImp {a} prf p =>
    \let
      | h => prfFinite prf
      -- we could have used a, so remove it
    \in (
      delete h.1 a,
      SubsetHelper.subsetDelete h.2,
      FinSets.FinWithout h.3 (decideEq _),
      introImp (prfWeaken h.4 SubsetHelper.addDelete) p
    )
  | refl p p' => (∅, SubsetHelper.emptySubset, FinSets.FinEmpty, refl p p')
  | notImp prf1 prf2 p =>
    \let
      | h1 => prfFinite prf1
      | h2 => prfFinite prf2
    \in (
      h1.1 ∪ h2.1,
      SubsetHelper.subsetUnion h1.2 h2.2,
      FinSets.FinUnion h1.3 h2.3,
      notImp (prfWeaken h1.4 (byLeft __)) (prfWeaken h2.4 (byRight __)) p
    )
  | notFalse p => (∅, SubsetHelper.emptySubset, FinSets.FinEmpty, notFalse p)
  | notEqual h p => (∅, SubsetHelper.emptySubset, FinSets.FinEmpty, notEqual h p)
  | notEqualSymm prf p =>
    \let
      | h => prfFinite prf
    \in (h.1, h.2, h.3, notEqualSymm h.4 p)
  | notHFromimpH f' prf1 prf2 p =>
    \let
      | h1 => prfFinite prf1
      | h2 => prfFinite prf2
    \in (
      h1.1 ∪ h2.1,
      SubsetHelper.subsetUnion h1.2 h2.2,
      FinSets.FinUnion h1.3 h2.3,
      notHFromimpH f' (prfWeaken h1.4 (byLeft __)) (prfWeaken h2.4 (byRight __)) p
    )
  | sub f t t' prf1 prf2 idp =>
    \let
      | h1 => prfFinite prf1
      | h2 => prfFinite prf2
    \in (
      h1.1 ∪ h2.1,
      SubsetHelper.subsetUnion h1.2 h2.2,
      FinSets.FinUnion h1.3 h2.3,
      sub f t t' (prfWeaken h1.4 (byLeft __)) (prfWeaken h2.4 (byRight __)) idp
    )
  | symm prf p =>
    \let
      | h => prfFinite prf
    \in (h.1, h.2, h.3, symm h.4 p)
  | trans prf1 prf2 p =>
    \let
      | h1 => prfFinite prf1
      | h2 => prfFinite prf2
    \in (
      h1.1 ∪ h2.1,
      SubsetHelper.subsetUnion h1.2 h2.2,
      FinSets.FinUnion h1.3 h2.3,
      trans (prfWeaken h1.4 (byLeft __)) (prfWeaken h2.4 (byRight __)) p
    )
  | fcong {f} prfs idp idp p =>
    \let
      | prfs' => \lam i => prfFinite (prfs i)
      | S => \lam i => (prfs' i).1
    \in (
      finiteUnion S,
      SubsetHelper.subsetFiniteUnion {_} {S} (\lam i => (prfs' i).2),
      FinSets.FinFiniteUnion S (\lam i => (prfs' i).3),
      fcong (\lam i => prfWeaken (prfs' i).4 (SubsetHelper.subsetFiniteUnion' {_} {S} (i, idp))) idp idp p
    )
  | rcong prfs prf p =>
    \let
      | prf' => prfFinite prf
      | prfs' => \lam i => prfFinite (prfs i)
      | S => \lam i => (prfs' i).1
    \in (
      finiteUnion S ∪ prf'.1,
      SubsetHelper.subsetUnion (SubsetHelper.subsetFiniteUnion {_} {S} (\lam i => (prfs' i).2)) prf'.2 ,
      FinSets.FinUnion (FinSets.FinFiniteUnion S (\lam i => (prfs' i).3)) prf'.3,
      rcong
          (\lam i => prfWeaken (prfs' i).4 (\lam h => byLeft $ SubsetHelper.subsetFiniteUnion' {_} {S} (i, idp) h))
          (prfWeaken prf'.4 (byRight __)) p
    )
  | and prf1 prf2 p =>
    \let
      | h1 => prfFinite prf1
      | h2 => prfFinite prf2
    \in (
      h1.1 ∪ h2.1,
      SubsetHelper.subsetUnion h1.2 h2.2,
      FinSets.FinUnion h1.3 h2.3,
      and (prfWeaken h1.4 (byLeft __)) (prfWeaken h2.4 (byRight __)) p
    )
  | modusPonens f prf1 prf2 =>
    \let
      | h1 => prfFinite prf1
      | h2 => prfFinite prf2
    \in (
      h1.1 ∪ h2.1,
      SubsetHelper.subsetUnion h1.2 h2.2,
      FinSets.FinUnion h1.3 h2.3,
      modusPonens f (prfWeaken h1.4 (byLeft __)) (prfWeaken h2.4 (byRight __))
    )
  | cExistsIntro t prf p =>
    \let
      | h => prfFinite prf
    \in (h.1, h.2, h.3, cExistsIntro t h.4 p)
  | cAndElim1 prf p =>
    \let
      | h => prfFinite prf
    \in (h.1, h.2, h.3, cAndElim1 h.4 p)
  | cAndElim2 prf p =>
    \let
      | h => prfFinite prf
    \in (h.1, h.2, h.3, cAndElim2 h.4 p)
