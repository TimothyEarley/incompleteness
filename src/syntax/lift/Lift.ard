\import Data.Fin
\import Function.Meta
\import syntax.Context
\import syntax.Syntax
\import syntax.lift.LiftFormula
\import util.SetUtil
\open Nat (+)


\func liftTheory {_ : Language} {delta c : Context} (T : Theory c) : Theory (delta + c) =>
  mapSet T (\lam f _ => liftFormula delta f)

-- pad is the opposite of lift, instead of adding context at the end and thus increasing
-- the existing, pad adds prior past context to the start and thus does nothing akin
-- to expand-fin-left

\func padFin {delta n : Nat} (i : Fin n) : Fin (n + delta)
\elim n, i
  | suc n, 0 => 0
  | suc n, suc i => fsuc $ padFin i
